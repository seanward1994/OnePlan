name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, megaalpha/v1 ]
  pull_request:
    branches: [ main, megaalpha/v1 ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Ensure gradlew is executable
        run: chmod +x gradlew

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace :app:assembleDebug

      - name: Upload APK(s) (warn if none)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

      - name: Generate FULL_CODE_DUMP (always)
        if: always()
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files \
            ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' \
            ':!**/*.keystore' ':!**/*.jks' \
          | while read -r f; do
              echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
              sed -n '1,4000p' "$f" >> "$OUT" || true
            done
          test -s "$OUT" && echo "Wrote $OUT"

      - name: Upload FULL_CODE_DUMP (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt
          if-no-files-found: error
