name: OnePlanAndroid — CI

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'gradle'

      # --- Self-heal Gradle wrapper if missing ---
      - name: Ensure Gradle wrapper exists
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p gradle/wrapper
          if [ ! -f gradle/wrapper/gradle-wrapper.jar ]; then
            echo "Wrapper jar missing — fetching…"
            curl -fsSL -o gradle-8.7-bin.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
            unzip -p gradle-8.7-bin.zip gradle-8.7/lib/gradle-wrapper-*.jar > gradle/wrapper/gradle-wrapper.jar
            rm -f gradle-8.7-bin.zip
          fi
          if [ ! -f gradlew ]; then
            echo "gradlew missing — creating launcher…"
            cat > gradlew <<'EOF'
            #!/usr/bin/env sh
            APP_HOME=$(dirname "$0")
            APP_HOME=$(cd "$APP_HOME" && pwd)
            CLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar
            JAVA_EXE=java
            exec "$JAVA_EXE" -Xms64m -Xmx512m -classpath "$CLASSPATH" org.gradle.wrapper.GradleWrapperMain "$@"
            EOF
            chmod +x gradlew
          fi
          # Properties (safe to overwrite)
          cat > gradle/wrapper/gradle-wrapper.properties <<'EOF'
          distributionBase=GRADLE_USER_HOME
          distributionPath=wrapper/dists
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-bin.zip
          zipStoreBase=GRADLE_USER_HOME
          zipStorePath=wrapper/dists
          EOF

      - name: Show tree for sanity
        run: ls -la && ls -la gradle && ls -la gradle/wrapper

      # --- Preferred: build with wrapper if present; otherwise use direct Gradle ---
      - name: Build debug APK (wrapper preferred, direct Gradle fallback)
        shell: bash
        run: |
          set -euo pipefail
          if [ -f ./gradlew ] && [ -f gradle/wrapper/gradle-wrapper.jar ]; then
            echo "Using Gradle Wrapper…"
            chmod +x ./gradlew
            ./gradlew --version
            ./gradlew assembleDebug --stacktrace
          else
            echo "Wrapper not usable — using direct Gradle action…"
            echo "gradle-version=8.7" >> $GITHUB_OUTPUT

      - name: Build with direct Gradle (only runs if previous step failed wrapper check)
        if: ${{ failure() }}
        uses: gradle/gradle-build-action@v3
        with:
          gradle-version: 8.7
          arguments: assembleDebug --stacktrace

      - name: Upload Debug APKs
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: '**/build/outputs/apk/debug/*.apk'
