OnePlan full source dump — 2025-09-30T20:05:45Z

### File list
.github/workflows/android-ci.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

### Sources

-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/** ]
  pull_request:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: gradle/actions/setup-gradle@v3

      - name: Build (debug)
        run: ./gradlew --no-daemon --stacktrace :app:assembleDebug

      - name: Full code dump (always)
        if: always()
        run: |
          echo "# FULL CODE DUMP — $(date -u)" > FULL_CODE_DUMP.txt
          echo >> FULL_CODE_DUMP.txt
          echo "## File list" >> FULL_CODE_DUMP.txt
          git ls-files | sort >> FULL_CODE_DUMP.txt
          echo >> FULL_CODE_DUMP.txt
          echo "## Sources" >> FULL_CODE_DUMP.txt
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
          | while read -r f; do
              echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> FULL_CODE_DUMP.txt
              sed -n '1,5000p' "$f" >> FULL_CODE_DUMP.txt || true
            done

      - name: Upload APK(s)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

      - name: Upload FULL_CODE_DUMP
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt

-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks

-----8<----- FILE: .oneplan_versioncode -----8<-----

4
-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

OnePlan full source dump — 2025-09-30T20:05:45Z

### File list
.github/workflows/android-ci.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

### Sources

-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/** ]
  pull_request:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - uses: gradle/actions/setup-gradle@v3

      - name: Build (debug)
        run: ./gradlew --no-daemon --stacktrace :app:assembleDebug

      - name: Full code dump (always)
        if: always()
        run: |
          echo "# FULL CODE DUMP — $(date -u)" > FULL_CODE_DUMP.txt
          echo >> FULL_CODE_DUMP.txt
          echo "## File list" >> FULL_CODE_DUMP.txt
          git ls-files | sort >> FULL_CODE_DUMP.txt
          echo >> FULL_CODE_DUMP.txt
          echo "## Sources" >> FULL_CODE_DUMP.txt
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
          | while read -r f; do
              echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> FULL_CODE_DUMP.txt
              sed -n '1,5000p' "$f" >> FULL_CODE_DUMP.txt || true
            done

      - name: Upload APK(s)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apk
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: warn

      - name: Upload FULL_CODE_DUMP
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt

-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks

-----8<----- FILE: .oneplan_versioncode -----8<-----

4
-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----


-----8<----- FILE: app/build.gradle.kts -----8<-----

plugins {
    id("com.android.application") version "8.5.2"
    kotlin("android") version "1.9.23"
}

android {
    namespace = "com.oneplan.app"
    compileSdk = 34

    defaultConfig {
        applicationId = "com.oneplan.app"
        minSdk = 24
        targetSdk = 34
        versionCode = (System.getenv("VC") ?: "1").toInt()
        versionName = "1.0.${System.getenv("VC") ?: "1"}"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
        debug { isDebuggable = true }
    }

    buildFeatures { compose = true }
    composeOptions { kotlinCompilerExtensionVersion = "1.5.12" }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = "17" }
}

dependencies {
    // Compose BOM
    val composeBom = platform("androidx.compose:compose-bom:2024.09.00")
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation("androidx.core:core-ktx:1.13.1")
    implementation("androidx.activity:activity-compose:1.9.2")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.8.5")

    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material3:material3")
    implementation("androidx.compose.material:material-icons-extended")

    // **Theme fix**: Provide a known existing XML theme parent via MDC + AppCompat.
    implementation("com.google.android.material:material:1.12.0")
    implementation("androidx.appcompat:appcompat:1.7.0")

    debugImplementation("androidx.compose.ui:ui-tooling")
    debugImplementation("androidx.compose.ui:ui-test-manifest")
    androidTestImplementation("androidx.test.ext:junit:1.2.1")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.6.1")
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
}

-----8<----- FILE: app/proguard-rules.pro -----8<-----

# (empty)

-----8<----- FILE: app/src/main/AndroidManifest.xml -----8<-----

<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <application
        android:label="OnePlan MegaAlpha"
        android:icon="@mipmap/ic_launcher"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:theme="@style/Theme.OnePlan">
        <activity
            android:name=".MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
    </application>
</manifest>

-----8<----- FILE: app/src/main/java/com/oneplan/app/BudgetScreen.kt -----8<-----


-----8<----- FILE: app/src/main/java/com/oneplan/app/MainActivity.kt -----8<-----

package com.oneplan.app

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*

class MainActivity : ComponentActivity() {
  override fun onCreate(savedInstanceState: Bundle?) {
    super.onCreate(savedInstanceState)
    setContent {
      MaterialTheme(colorScheme = lightColorScheme()) {
        var tab by remember { mutableStateOf(0) }
        Scaffold(
          topBar = { TopAppBar(title = { Text("OnePlan MegaAlpha") }) }
        ) { pad ->
          Column(Modifier.padding(pad).fillMaxSize()) {
            TabRow(selectedTabIndex = tab) {
              Tab(selected = tab == 0, onClick = { tab = 0 }, text = { Text("Budget") })
              Tab(selected = tab == 1, onClick = { tab = 1 }, text = { Text("Meals") })
              Tab(selected = tab == 2, onClick = { tab = 2 }, text = { Text("AI") })
            }
            when (tab) {
              0 -> Text("Budget — ready to wire", Modifier.padding(16.dp))
              1 -> Text("Meals — ready to wire", Modifier.padding(16.dp))
              2 -> Text("AI — plug provider later", Modifier.padding(16.dp))
            }
          }
        }
      }
    }
  }
}

-----8<----- FILE: app/src/main/java/com/oneplan/app/MealPlanScreen.kt -----8<-----


-----8<----- FILE: app/src/main/java/com/oneplan/app/Nav.kt -----8<-----


-----8<----- FILE: app/src/main/java/com/oneplan/app/SettingsScreen.kt -----8<-----


-----8<----- FILE: app/src/main/java/com/oneplan/app/Theme.kt -----8<-----


-----8<----- FILE: app/src/main/java/com/oneplan/app/data.kt -----8<-----


-----8<----- FILE: app/src/main/java/com/oneplan/app/di.kt -----8<-----


-----8<----- FILE: app/src/main/res/drawable/ic_launcher_foreground.xml -----8<-----


-----8<----- FILE: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml -----8<-----

<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@android:color/white" />
    <foreground android:drawable="@android:drawable/sym_def_app_icon" />
</adaptive-icon>

-----8<----- FILE: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml -----8<-----

<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@android:color/white" />
    <foreground android:drawable="@android:drawable/sym_def_app_icon" />
</adaptive-icon>

-----8<----- FILE: app/src/main/res/values/colors.xml -----8<-----

<resources>
    <color name="oneplan_primary">#2F80ED</color>
</resources>

-----8<----- FILE: app/src/main/res/values/themes.xml -----8<-----

<resources>
    <style name="Theme.OnePlan" parent="Theme.MaterialComponents.DayNight.NoActionBar" />
</resources>

-----8<----- FILE: build.gradle.kts -----8<-----

// Keep root lean: NO plugins{} here (prevents duplicate-plugins errors)
allprojects {
  repositories {
    google()
    mavenCentral()
  }
}

-----8<----- FILE: dump_code.sh -----8<-----

#!/usr/bin/env bash
set -euo pipefail
OUT="FULL_CODE_DUMP.txt"
echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
echo >> "$OUT"
echo "## File list" >> "$OUT"
git ls-files | sort >> "$OUT"
echo >> "$OUT"
echo "## Sources" >> "$OUT"
git ls-files \
  ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' \
  ':!**/*.keystore' ':!**/*.jks' \
| while read -r f; do
    echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
    sed -n '1,4000p' "$f" >> "$OUT" || true
  done
echo "✅ Local FULL_CODE_DUMP written to $OUT"

-----8<----- FILE: gradle.properties -----8<-----

org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8
android.useAndroidX=true
kotlin.code.style=official

-----8<----- FILE: gradle/wrapper/gradle-wrapper.properties -----8<-----

distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-all.zip
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists

-----8<----- FILE: gradlew -----8<-----

#!/usr/bin/env bash
set -e
APP_BASE_DIR=$(cd "${0%/*}" && pwd -P)
exec "${APP_BASE_DIR}/gradle/wrapper/gradle-wrapper.jar" >/dev/null 2>&1 || true
exec "${APP_BASE_DIR}/gradle/wrapper/gradle-wrapper.jar" 2>/dev/null || true
# If wrapper jar exists, run wrapper; otherwise fallback to system gradle
if [ -f "${APP_BASE_DIR}/gradle/wrapper/gradle-wrapper.jar" ]; then
  JAVA_EXE="${JAVA_HOME}/bin/java"
  if [ ! -x "$JAVA_EXE" ]; then JAVA_EXE="java"; fi
  exec "$JAVA_EXE" -Xmx64m -cp "${APP_BASE_DIR}/gradle/wrapper/gradle-wrapper.jar" org.gradle.wrapper.GradleWrapperMain "$@"
else
  echo "Wrapper jar missing — falling back to system gradle" >&2
  exec gradle "$@"
fi

-----8<----- FILE: gradlew.bat -----8<-----

@ECHO OFF
SET DIR=%~dp0
IF EXIST "%DIR%gradle\wrapper\gradle-wrapper.jar" (
  "%JAVA_HOME%\bin\java" -Xmx64m -cp "%DIR%gradle\wrapper\gradle-wrapper.jar" org.gradle.wrapper.GradleWrapperMain %*
) ELSE (
  gradle %*
)

-----8<----- FILE: settings.gradle.kts -----8<-----

rootProject.name = "OnePlanMegaAlpha"
include(":app")
