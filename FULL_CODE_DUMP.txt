# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: .github/workflows/self-heal.yml -----8<-----

name: OnePlan — Self Heal
on:
  workflow_dispatch:

permissions:
  contents: write

jobs:
  heal:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }
      - name: Run self-heal script
        run: |
          bash oneplan_perfect_fix.sh || true
      - name: Commit & push (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add -A
          git commit -m "chore(self-heal): repo repaired [skip ci]" || echo "no changes"
          git push || echo "no push"


-----8<----- FILE: .github/workflows/windows-stub.yml -----8<-----

name: OnePlan Windows — Stub (non-blocking)
on:
  push:
    branches: [ main, refactor/** ]
  workflow_dispatch:

jobs:
  prepare-windows:
    runs-on: windows-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - name: Placeholder
        run: |
          echo "Windows packaging will be added after Android beta is stable."


-----8<----- FILE: .gitignore -----8<-----

*.iml
.gradle
/local.properties
/.idea
/captures
.externalNativeBuild
.cxx
/build
app/build
*.keystore
*.jks


-----8<----- FILE: .oneplan_versioncode -----8<-----

12


-----8<----- FILE: FULL_CODE_DUMP.txt -----8<-----

# OnePlan — full source dump (2025-09-30T20:13:24Z)

## File list
.github/workflows/android-ci.yml
.github/workflows/self-heal.yml
.github/workflows/windows-stub.yml
.gitignore
.oneplan_versioncode
FULL_CODE_DUMP.txt
app/build.gradle.kts
app/proguard-rules.pro
app/src/main/AndroidManifest.xml
app/src/main/java/com/oneplan/app/BudgetScreen.kt
app/src/main/java/com/oneplan/app/MainActivity.kt
app/src/main/java/com/oneplan/app/MealPlanScreen.kt
app/src/main/java/com/oneplan/app/Nav.kt
app/src/main/java/com/oneplan/app/SettingsScreen.kt
app/src/main/java/com/oneplan/app/Theme.kt
app/src/main/java/com/oneplan/app/data.kt
app/src/main/java/com/oneplan/app/di.kt
app/src/main/res/drawable/ic_launcher_foreground.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml
app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml
app/src/main/res/mipmap-hdpi/ic_launcher.png
app/src/main/res/mipmap-hdpi/ic_launcher_round.png
app/src/main/res/mipmap-mdpi/ic_launcher.png
app/src/main/res/mipmap-mdpi/ic_launcher_round.png
app/src/main/res/mipmap-xhdpi/ic_launcher.png
app/src/main/res/mipmap-xhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher.png
app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png
app/src/main/res/values/colors.xml
app/src/main/res/values/themes.xml
build.gradle.kts
dump_code.sh
gradle.properties
gradle/wrapper/gradle-wrapper.jar
gradle/wrapper/gradle-wrapper.properties
gradlew
gradlew.bat
settings.gradle.kts

## Sources


-----8<----- FILE: .github/workflows/android-ci.yml -----8<-----

name: OnePlanAndroid — CI
on:
  push:
    branches: [ main, refactor/v1 ]
  pull_request:
    branches: [ main, refactor/v1 ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build debug APK (wrapper)
        run: ./gradlew --no-daemon --stacktrace assembleDebug

      - name: Upload APK(s)
        uses: actions/upload-artifact@v4
        with:
          name: oneplan-debug-apks
          path: app/build/outputs/apk/debug/*.apk
          if-no-files-found: error

      - name: Generate FULL_CODE_DUMP.txt (root)
        run: |
          OUT="FULL_CODE_DUMP.txt"
          echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
          echo >> "$OUT"
          echo "## File list" >> "$OUT"
          git ls-files | sort >> "$OUT"
          echo >> "$OUT"
          echo "## Sources" >> "$OUT"
          git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
            | while read -r f; do
                echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
                sed -n '1,5000p' "$f" >> "$OUT" || true
              done

      - name: Commit FULL_CODE_DUMP.txt to repo (skip CI)
        run: |
          git config user.name  "oneplan-bot"
          git config user.email "oneplan-bot@users.noreply.github.com"
          git add FULL_CODE_DUMP.txt
          git commit -m "chore(dump): update FULL_CODE_DUMP.txt [skip ci]" || echo "no changes"
          git push || echo "no push"

      - name: Upload dump artifact
        uses: actions/upload-artifact@v4
        with:
          name: FULL_CODE_DUMP
          path: FULL_CODE_DUMP.txt


-----8<----- FILE: app/build.gradle.kts -----8<-----

plugins {
    id("com.android.application") version "8.5.2"
    kotlin("android") version "1.9.23"
}

android {
    namespace = "com.oneplan.app"
    compileSdk = 34

    defaultConfig {
        applicationId = "com.oneplan.app"
        minSdk = 24
        targetSdk = 34
        versionCode = (System.getenv("VC") ?: "1").toInt()
        versionName = "1.0.${System.getenv("VC") ?: "1"}"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            isMinifyEnabled = false
            proguardFiles(
                getDefaultProguardFile("proguard-android-optimize.txt"),
                "proguard-rules.pro"
            )
        }
        debug { isDebuggable = true }
    }

    buildFeatures { compose = true }
    composeOptions { kotlinCompilerExtensionVersion = "1.5.12" }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions { jvmTarget = "17" }
}

dependencies {
    val composeBom = platform("androidx.compose:compose-bom:2024.09.00")
    implementation(composeBom)
    androidTestImplementation(composeBom)

    implementation("androidx.core:core-ktx:1.13.1")
    implementation("androidx.activity:activity-compose:1.9.2")
    implementation("androidx.lifecycle:lifecycle-runtime-ktx:2.8.5")

    implementation("androidx.compose.ui:ui")
    implementation("androidx.compose.ui:ui-tooling-preview")
    implementation("androidx.compose.material3:material3")
    implementation("androidx.compose.material:material-icons-extended")

    // Fix: MaterialComponents theme support
    implementation("com.google.android.material:material:1.12.0")
    implementation("androidx.appcompat:appcompat:1.7.0")

    debugImplementation("androidx.compose.ui:ui-tooling")
    debugImplementation("androidx.compose.ui:ui-test-manifest")
    androidTestImplementation("androidx.test.ext:junit:1.2.1")
    androidTestImplementation("androidx.test.espresso:espresso-core:3.6.1")
    androidTestImplementation("androidx.compose.ui:ui-test-junit4")
}


-----8<----- FILE: app/proguard-rules.pro -----8<-----

# (empty)


-----8<----- FILE: app/src/main/AndroidManifest.xml -----8<-----

<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <application
        android:label="OnePlan"
        android:icon="@mipmap/ic_launcher"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:theme="@style/Theme.OnePlan">
        <activity
            android:name="com.oneplan.app.MainActivity"
            android:exported="true">
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
    </application>
</manifest>


-----8<----- FILE: app/src/main/java/com/oneplan/app/BudgetScreen.kt -----8<-----

package com.oneplan.app

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.TextFieldValue
import androidx.compose.ui.unit.dp
import kotlinx.coroutines.launch

@Composable
fun BudgetScreen() {
    val repos = LocalRepos.current
    val scope = rememberCoroutineScope()
    var items by remember { mutableStateOf(listOf<BudgetItem>()) }
    var showAdd by remember { mutableStateOf(false) }

    LaunchedEffect(Unit) { items = repos.budget.list() }
    fun reload() = scope.launch { items = repos.budget.list() }

    Scaffold(
        floatingActionButton = { FloatingActionButton(onClick = { showAdd = true }) { Text("+") } }
    ) { pad ->
        Column(Modifier.fillMaxSize().padding(pad).padding(16.dp)) {
            Text("Budget", style = MaterialTheme.typography.headlineMedium)
            Spacer(Modifier.height(12.dp))
            LazyColumn(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                items(items) { item ->
                    Card {
                        Row(Modifier.padding(12.dp), verticalAlignment = Alignment.CenterVertically) {
                            Column(Modifier.weight(1f)) {
                                Text(item.label, style = MaterialTheme.typography.titleMedium)
                                Text(item.category, style = MaterialTheme.typography.bodySmall)
                            }
                            Text("$${"%.2f".format(item.amountCents / 100.0)}")
                            Spacer(Modifier.width(8.dp))
                            OutlinedButton(onClick = { scope.launch { repos.budget.remove(item); reload() } }) { Text("Delete") }
                        }
                    }
                }
            }
        }
    }

    if (showAdd) AddBudgetDialog(
        onDismiss = { showAdd = false },
        onAdd = { label, cents, cat ->
            scope.launch { repos.budget.add(BudgetItem(label = label, amountCents = cents, category = cat)); reload(); showAdd = false }
        }
    )
}

@Composable
private fun AddBudgetDialog(onDismiss: () -> Unit, onAdd: (String, Long, String) -> Unit) {
    var label by remember { mutableStateOf(TextFieldValue("")) }
    var amount by remember { mutableStateOf(TextFieldValue("")) }
    var category by remember { mutableStateOf(TextFieldValue("General")) }
    AlertDialog(
        onDismissRequest = onDismiss,
        title = { Text("Add Budget Item") },
        text = {
            Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                OutlinedTextField(label = { Text("Label") }, value = label, onValueChange = { label = it })
                OutlinedTextField(label = { Text("Amount (e.g. 12.34)") }, value = amount, onValueChange = { amount = it })
                OutlinedTextField(label = { Text("Category") }, value = category, onValueChange = { category = it })
            }
        },
        confirmButton = {
            TextButton(onClick = {
                val cents = ((amount.text.toDoubleOrNull() ?: 0.0) * 100).toLong()
                onAdd(label.text.trim(), cents, category.text.trim().ifEmpty { "General" })
            }) { Text("Add") }
        },
        dismissButton = { TextButton(onClick = onDismiss) { Text("Cancel") } }
    )
}


-----8<----- FILE: app/src/main/java/com/oneplan/app/MainActivity.kt -----8<-----

package com.oneplan.app

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.runtime.CompositionLocalProvider

class MainActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        val repos = Repos(applicationContext)
        setContent {
            CompositionLocalProvider(LocalRepos provides repos) {
                OnePlanTheme {
                    OnePlanApp()
                }
            }
        }
    }
}


-----8<----- FILE: app/src/main/java/com/oneplan/app/MealPlanScreen.kt -----8<-----

package com.oneplan.app

import androidx.compose.foundation.layout.*
import androidx.compose.foundation.lazy.LazyColumn
import androidx.compose.foundation.lazy.items
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.text.input.TextFieldValue
import androidx.compose.ui.unit.dp
import kotlinx.coroutines.launch

@Composable
fun MealPlanScreen() {
    val repos = LocalRepos.current
    val scope = rememberCoroutineScope()
    var items by remember { mutableStateOf(listOf<Meal>()) }
    var showAdd by remember { mutableStateOf(false) }

    LaunchedEffect(Unit) { items = repos.meals.list() }
    fun reload() = scope.launch { items = repos.meals.list() }

    Scaffold(floatingActionButton = { FloatingActionButton(onClick = { showAdd = true }) { Text("+") } }) { pad ->
        Column(Modifier.fillMaxSize().padding(pad).padding(16.dp)) {
            Text("Meals", style = MaterialTheme.typography.headlineMedium)
            Spacer(Modifier.height(12.dp))
            LazyColumn(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                items(items) { item ->
                    Card {
                        Row(Modifier.padding(12.dp), verticalAlignment = Alignment.CenterVertically) {
                            Column(Modifier.weight(1f)) {
                                Text(item.title, style = MaterialTheme.typography.titleMedium)
                                Text("${item.calories} kcal  ${item.day}", style = MaterialTheme.typTypography.bodySmall)
                            }
                            OutlinedButton(onClick = { scope.launch { repos.meals.remove(item); reload() } }) { Text("Delete") }
                        }
                    }
                }
            }
        }
    }

    if (showAdd) AddMealDialog(
        onDismiss = { showAdd = false },
        onAdd = { title, kcal, day -> scope.launch { repos.meals.add(Meal(title = title, calories = kcal, day = day)); reload(); showAdd = false } }
    )
}

@Composable
private fun AddMealDialog(onDismiss: () -> Unit, onAdd: (String, Int, String) -> Unit) {
    var title by remember { mutableStateOf(TextFieldValue("")) }
    var calories by remember { mutableStateOf(TextFieldValue("")) }
    var day by remember { mutableStateOf(TextFieldValue("")) }
    AlertDialog(
        onDismissRequest = onDismiss,
        title = { Text("Add Meal") },
        text = {
            Column(verticalArrangement = Arrangement.spacedBy(8.dp)) {
                OutlinedTextField(label = { Text("Title") }, value = title, onValueChange = { title = it })
                OutlinedTextField(label = { Text("Calories") }, value = calories, onValueChange = { calories = it })
                OutlinedTextField(label = { Text("Day") }, value = day, onValueChange = { day = it })
            }
        },
        confirmButton = {
            TextButton(onClick = { onAdd(title.text.trim(), calories.text.toIntOrNull() ?: 0, day.text.trim()) }) { Text("Add") }
        },
        dismissButton = { TextButton(onClick = onDismiss) { Text("Cancel") } }
    )
}


-----8<----- FILE: app/src/main/java/com/oneplan/app/Nav.kt -----8<-----

package com.oneplan.app

import androidx.compose.foundation.layout.padding
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.navigation.NavHostController
import androidx.navigation.compose.NavHost
import androidx.navigation.compose.composable
import androidx.navigation.compose.currentBackStackEntryAsState
import androidx.navigation.compose.rememberNavController
import androidx.compose.material.icons.Icons
import androidx.compose.material.icons.filled.Home
import androidx.compose.material.icons.filled.Restaurant
import androidx.compose.material.icons.filled.Settings

@Composable
fun OnePlanApp() {
    val nav = rememberNavController()
    Scaffold(
        topBar = { TopAppBar(title = { Text("OnePlan") }) },
        bottomBar = { OnePlanBottomBar(nav) }
    ) { pad ->
        NavHost(navController = nav, startDestination = "budget", modifier = Modifier.padding(pad)) {
            composable("budget") { BudgetScreen() }
            composable("meals") { MealPlanScreen() }
            composable("settings") { SettingsScreen() }
        }
    }
}

@Composable
fun OnePlanBottomBar(nav: NavHostController) {
    data class Item(val route: String, val label: String, val icon: @Composable () -> Unit)
    val items = listOf(
        Item("budget", "Budget", { Icon(Icons.Filled.Home, contentDescription = "Budget") }),
        Item("meals", "Meals", { Icon(Icons.Filled.Restaurant, contentDescription = "Meals") }),
        Item("settings", "Settings", { Icon(Icons.Filled.Settings, contentDescription = "Settings") }),
    )
    NavigationBar {
        val current by nav.currentBackStackEntryAsState()
        val route = current?.destination?.route
        items.forEach { item ->
            NavigationBarItem(
                selected = route == item.route,
                onClick = {
                    nav.navigate(item.route) {
                        popUpTo(nav.graph.startDestinationId) { saveState = true }
                        launchSingleTop = true
                        restoreState = true
                    }
                },
                label = { Text(item.label) },
                icon = item.icon
            )
        }
    }
}


-----8<----- FILE: app/src/main/java/com/oneplan/app/SettingsScreen.kt -----8<-----

package com.oneplan.app

import android.widget.Toast
import androidx.compose.foundation.layout.*
import androidx.compose.material3.*
import androidx.compose.runtime.*
import androidx.compose.ui.Modifier
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.unit.dp
import kotlinx.coroutines.launch

@Composable
fun SettingsScreen() {
    val repos = LocalRepos.current
    val ctx = LocalContext.current
    val scope = rememberCoroutineScope()

    val currency by repos.currencyFlow.collectAsState(initial = "USD")
    val daily by repos.dailyCaloriesFlow.collectAsState(initial = 2000)

    var currencyInput by remember(currency) { mutableStateOf(currency) }
    var caloriesInput by remember(daily) { mutableStateOf(daily.toString()) }

    Column(Modifier.fillMaxSize().padding(16.dp), verticalArrangement = Arrangement.spacedBy(12.dp)) {
        Text("Settings", style = MaterialTheme.typography.headlineMedium)
        OutlinedTextField(value = currencyInput, onValueChange = { currencyInput = it }, label = { Text("Currency (e.g. USD, EUR)") })
        OutlinedTextField(value = caloriesInput, onValueChange = { caloriesInput = it }, label = { Text("Daily Calories Target") })
        Button(onClick = {
            scope.launch {
                repos.setCurrency(ctx, currencyInput.ifBlank { "USD" })
                repos.setDailyCalories(ctx, caloriesInput.toIntOrNull() ?: 2000)
                Toast.makeText(ctx, "Saved", Toast.LENGTH_SHORT).show()
            }
        }) { Text("Save") }
        Text("Current: $currency • $daily kcal")
    }
}


-----8<----- FILE: app/src/main/java/com/oneplan/app/Theme.kt -----8<-----

package com.oneplan.app

import androidx.compose.material3.MaterialTheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.Composable

private val Colors = lightColorScheme()

@Composable
fun OnePlanTheme(content: @Composable () -> Unit) {
    MaterialTheme(colorScheme = Colors, content = content)
}


-----8<----- FILE: app/src/main/java/com/oneplan/app/data.kt -----8<-----

package com.oneplan.app

import androidx.room.*

@Entity(tableName = "budget_items")
data class BudgetItem(
    @PrimaryKey(autoGenerate = true) val id: Long = 0,
    val label: String,
    val amountCents: Long,
    val category: String = "General",
    val timestamp: Long = System.currentTimeMillis()
)

@Entity(tableName = "meals")
data class Meal(
    @PrimaryKey(autoGenerate = true) val id: Long = 0,
    val title: String,
    val calories: Int = 0,
    val day: String = ""
)

@Dao interface BudgetDao {
    @Query("SELECT * FROM budget_items ORDER BY timestamp DESC") suspend fun list(): List<BudgetItem>
    @Insert suspend fun add(item: BudgetItem)
    @Delete suspend fun remove(item: BudgetItem)
}

@Dao interface MealDao {
    @Query("SELECT * FROM meals ORDER BY id DESC") suspend fun list(): List<Meal>
    @Insert suspend fun add(meal: Meal)
    @Delete suspend fun remove(meal: Meal)
}

@Database(entities = [BudgetItem::class, Meal::class], version = 1)
abstract class OnePlanDb : RoomDatabase() {
    abstract fun budget(): BudgetDao
    abstract fun meals(): MealDao
}


-----8<----- FILE: app/src/main/java/com/oneplan/app/di.kt -----8<-----

package com.oneplan.app

import android.content.Context
import androidx.compose.runtime.staticCompositionLocalOf
import androidx.datastore.preferences.core.edit
import androidx.datastore.preferences.core.intPreferencesKey
import androidx.datastore.preferences.core.stringPreferencesKey
import androidx.datastore.preferences.preferencesDataStore
import androidx.room.Room
import kotlinx.coroutines.flow.Flow
import kotlinx.coroutines.flow.map

val Context.dataStore by preferencesDataStore("oneplan_prefs")

class Repos(context: Context) {
    private val db = Room.databaseBuilder(
        context, OnePlanDb::class.java, "oneplan.db"
    ).fallbackToDestructiveMigration().build()

    val budget = db.budget()
    val meals = db.meals()

    // Simple settings
    private val currencyKey = stringPreferencesKey("currency")
    private val caloriesKey = intPreferencesKey("daily_calories")

    val currencyFlow: Flow<String> = context.dataStore.data.map { it[currencyKey] ?: "USD" }
    val dailyCaloriesFlow: Flow<Int> = context.dataStore.data.map { it[caloriesKey] ?: 2000 }

    suspend fun setCurrency(context: Context, value: String) {
        context.dataStore.edit { it[currencyKey] = value }
    }
    suspend fun setDailyCalories(context: Context, value: Int) {
        context.dataStore.edit { it[caloriesKey] = value }
    }
}

val LocalRepos = staticCompositionLocalOf<Repos> {
    error("LocalRepos not provided")
}


-----8<----- FILE: app/src/main/res/drawable/ic_launcher_foreground.xml -----8<-----

<vector xmlns:android="http://schemas.android.com/apk/res/android"
    android:width="108dp" android:height="108dp"
    android:viewportWidth="108" android:viewportHeight="108">
    <path android:fillColor="#2F80ED" android:pathData="M0,0h108v108h-108z"/>
    <path android:fillColor="#FFFFFF" android:pathData="M24,54h60v8h-60z"/>
    <path android:fillColor="#FFFFFF" android:pathData="M24,70h40v8h-40z"/>
</vector>


-----8<----- FILE: app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml -----8<-----

<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@android:color/white"/>
    <foreground android:drawable="@drawable/ic_launcher_foreground"/>
</adaptive-icon>


-----8<----- FILE: app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml -----8<-----

<adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
    <background android:drawable="@android:color/white"/>
    <foreground android:drawable="@drawable/ic_launcher_foreground"/>
</adaptive-icon>


-----8<----- FILE: app/src/main/res/values/colors.xml -----8<-----

<resources>
    <color name="oneplan_primary">#2F80ED</color>
</resources>


-----8<----- FILE: app/src/main/res/values/themes.xml -----8<-----

<resources>
    <style name="Theme.OnePlan" parent="Theme.MaterialComponents.DayNight.NoActionBar" />
</resources>


-----8<----- FILE: build.gradle.kts -----8<-----

// Root kept lean to avoid duplicate plugins errors
allprojects {
  repositories {
    google()
    mavenCentral()
  }
}


-----8<----- FILE: dump_code.sh -----8<-----

#!/usr/bin/env bash
set -euo pipefail
OUT="FULL_CODE_DUMP.txt"
echo "# OnePlan — full source dump ($(date -u +%Y-%m-%dT%H:%M:%SZ))" > "$OUT"
echo >> "$OUT"
echo "## File list" >> "$OUT"
git ls-files | sort >> "$OUT"
echo >> "$OUT"
echo "## Sources" >> "$OUT"
git ls-files ':!**/*.png' ':!**/*.jpg' ':!**/*.jpeg' ':!**/*.webp' ':!**/*.gif' ':!**/*.keystore' ':!**/*.jks' \
| while read -r f; do
    echo -e "\n\n-----8<----- FILE: $f -----8<-----\n" >> "$OUT"
    sed -n '1,4000p' "$f" >> "$OUT" || true
done
echo "✅ FULL_CODE_DUMP written to $OUT"


-----8<----- FILE: gradle.properties -----8<-----

org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8
android.useAndroidX=true
kotlin.code.style=official
# Artifacts live in Actions → OnePlanAndroid — CI


-----8<----- FILE: gradle/wrapper/gradle-wrapper.jar -----8<-----

PK